// Generated by CoffeeScript 1.7.1

/*
  This data type represent level
 */

(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  dataTypes.Level = (function(_super) {
    __extends(Level, _super);

    Level.prototype.DT = "dataTypes.Level";

    function Level(ltree) {
      this.isCellBelongs = __bind(this.isCellBelongs, this);
      this.removeCell = __bind(this.removeCell, this);
      this.addCell = __bind(this.addCell, this);
      this.init = __bind(this.init, this);
      Level.__super__.constructor.apply(this, arguments);
      this.set("level", ltree);
    }

    Level.prototype.init = function() {
      Level.__super__.init.apply(this, arguments);
      return this.set("level", null);
    };

    Level.prototype.addCell = function(cell) {};

    Level.prototype.removeCell = function(cell) {};

    Level.prototype.isCellBelongs = function(cell) {
      var x;
      x = this.get("level")[cell[0]];
      if (x != null) {
        return x[cell[1]] != null;
      } else {
        return false;
      }
    };

    Level.createFromLevelObject = function(lobj) {
      return new dataTypes.Level(utils.serializers.Level.serializeObjectToWorldTree(lobj));
    };

    return Level;

  })(chms.ard.AbstractReactiveData);

}).call(this);
