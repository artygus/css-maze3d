// Generated by CoffeeScript 1.7.1

/*
  This data type represent 2d matrix
 */

(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  dataTypes.Matrix2d = (function(_super) {
    __extends(Matrix2d, _super);

    Matrix2d.prototype.DT = "dataTypes.Matrix2d";

    function Matrix2d(data) {
      this.isCellContainsData = __bind(this.isCellContainsData, this);
      this.removeData = __bind(this.removeData, this);
      this.putData = __bind(this.putData, this);
      this.init = __bind(this.init, this);
      Matrix2d.__super__.constructor.apply(this, arguments);
      this.set("mdata", data);
    }

    Matrix2d.prototype.init = function() {
      Matrix2d.__super__.init.apply(this, arguments);
      return this.set("mdata", null);
    };

    Matrix2d.prototype.putData = function(cell) {};

    Matrix2d.prototype.removeData = function(cell) {};

    Matrix2d.prototype.isCellContainsData = function(cell) {
      var x;
      x = this.get("mdata")[cell[0]];
      if (x != null) {
        return x[cell[1]] != null;
      } else {
        return false;
      }
    };

    Matrix2d.createFromLevelObject = function(lobj) {
      return new dataTypes.Matrix2d(utils.serializers.Level.serializeObjectToWorldTree(lobj));
    };

    return Matrix2d;

  })(chms.ard.AbstractReactiveData);

}).call(this);
