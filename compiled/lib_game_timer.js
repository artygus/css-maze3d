// Generated by CoffeeScript 1.7.1

/*
  Game timer
 */

(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  utils.lib.GameTimer = (function() {
    GameTimer.prototype.DT = "utils.lib.GameTimer";

    GameTimer.prototype.TICK_TIME = 10;

    function GameTimer() {
      this.isPaused = __bind(this.isPaused, this);
      this.setPause = __bind(this.setPause, this);
      this.setTimeout = __bind(this.setTimeout, this);
      this.tick = __bind(this.tick, this);
      this._mainCounter = 0;
      this._pauseCounter = 0;
    }

    GameTimer.prototype.tick = function() {
      if (this._mainCounter === 0) {
        clearInterval(this._interval);
        return;
      }
      if (this.isPaused()) {
        return this._pauseCounter = Math.max(0, this._pauseCounter - this.TICK_TIME);
      } else {
        this._mainCounter = Math.max(0, this._mainCounter - this.TICK_TIME);
        if (this._mainCounter === 0) {
          this._callback();
          this._callback = void 0;
          return clearInterval(this._interval);
        }
      }
    };

    GameTimer.prototype.setTimeout = function(fn, time) {
      clearInterval(this._interval);
      this._callback = fn;
      this._mainCounter = time;
      return this._interval = setInterval(this.tick, this.TICK_TIME);
    };

    GameTimer.prototype.setPause = function(ms) {
      return this._pauseCounter = ms;
    };

    GameTimer.prototype.isPaused = function() {
      return this._pauseCounter > 0;
    };

    return GameTimer;

  })();

}).call(this);
