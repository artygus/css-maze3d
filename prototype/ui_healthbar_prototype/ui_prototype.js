// Generated by CoffeeScript 1.7.1

/*
  Game ui prototype
 */

(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  window.UIPrototype = (function(_super) {
    __extends(UIPrototype, _super);

    UIPrototype.prototype.DT = "UIPrototype";

    function UIPrototype(gameLogic) {
      this.gameLogic = gameLogic;
      this.drawHealthbar = __bind(this.drawHealthbar, this);
      UIPrototype.__super__.constructor.apply(this, arguments);
      console.log(this.DT, "Init.");
      this.container = $("#ui-prototype-container");
      this.healthbar = this.container.find("[health-bar]");
      this.dataPlayer = this.gameLogic.player.data;
      $(this.dataPlayer).asEventStream(chms.ard.AbstractReactiveData.I_DATA_CHANGED).filter(function(v) {
        return v.key === "currentHealth";
      }).onValue(this.drawHealthbar);
    }

    UIPrototype.prototype.drawHealthbar = function() {
      console.log(this.DT, "Draw health bar");
      return this.healthbar.css({
        width: this.dataPlayer.getCurrentHealthInPercent() * 100 + "%"
      });
    };

    return UIPrototype;

  })(abstract.Object);

}).call(this);
