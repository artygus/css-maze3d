// Generated by CoffeeScript 1.7.1

/*
  Main editor data file
 */

(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  levelEditor.data.Editor = (function(_super) {
    __extends(Editor, _super);

    Editor.prototype.DT = "levelEditor.data.Editor";

    function Editor() {
      this.logicUpdateSelectedCellOnModeChanged = __bind(this.logicUpdateSelectedCellOnModeChanged, this);
      this.init = __bind(this.init, this);
      Editor.__super__.constructor.apply(this, arguments);
      console.log(this.DT, "Init.");
      this.logicUpdateSelectedCellOnModeChanged();
    }

    Editor.prototype.init = function() {
      Editor.__super__.init.apply(this, arguments);
      this.set("ui-modes", new levelEditor.data.UiModes());
      this.set("level-cells", new levelEditor.data.LevelCells());
      this.set("level-actors", new levelEditor.data.LevelActors());
      return this.set("selected-cell", null);
    };

    Editor.prototype.logicUpdateSelectedCellOnModeChanged = function() {
      return $(this.get("ui-modes")).asEventStream(this.s.I_DATA_CHANGED).filter(function(v) {
        return v.key === "currentMode";
      }).filter((function(_this) {
        return function(v) {
          return v.value !== _this.get("ui-modes").s.MODE_SELECT;
        };
      })(this)).onValue((function(_this) {
        return function() {
          return _this.setIfUnequal("selected-cell", null);
        };
      })(this));
    };

    return Editor;

  })(chms.ard.AbstractReactiveData);

}).call(this);
