// Generated by CoffeeScript 1.7.1

/*
  Asset explorer view
 */

(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  levelEditor.view.AssetExplorer = (function(_super) {
    __extends(AssetExplorer, _super);

    AssetExplorer.prototype.DT = "levelEditor.view.AssetExplorer";

    AssetExplorer.VID = "view-leditor-asset-explorer";

    function AssetExplorer(view, app) {
      this.view = view;
      this.app = app;
      this.templateAssetListItem = __bind(this.templateAssetListItem, this);
      this.renderAssetsList = __bind(this.renderAssetsList, this);
      AssetExplorer.__super__.constructor.apply(this, arguments);
      console.log(this.DT, "Init.");
      this.renderAssetsList();
    }

    AssetExplorer.prototype.renderAssetsList = function() {
      var asset, container, _i, _len, _ref, _results;
      container = this.view.find("[asset-list]");
      _ref = data.Assets;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        asset = _ref[_i];
        _results.push(container.append(this.templateAssetListItem(asset)));
      }
      return _results;
    };

    AssetExplorer.prototype.templateAssetListItem = function(asset) {
      var id;
      id = "place-asset-" + asset.id;
      return "<div class=\"radio\">\n  <label for=\"" + id + "\">\n    <input type=\"radio\" name=\"asset\" class=\"list-group-item\" id=\"" + id + "\">\n    " + asset.name + "\n  </label>\n</div>";
    };

    return AssetExplorer;

  })(levelEditor.Object);

}).call(this);
